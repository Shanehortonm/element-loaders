* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}


/*
========================================
    First Loader - learning use for mask, @keyframes and animation
========================================
*/

.loader-holder1 {
    margin: 0;
    min-height: 50vh;
    display: grid;
    place-content: center;
    border: 40px solid aqua;
    background-color: #000;
}

.loader1 {
    width: 150px;           /* dimension of shape */
    aspect-ratio: 1;        /* makes height and width remain equal and in this case a s */
    display: grid;
    -webkit-mask: conic-gradient(from 22deg, #0003,#000);  /* used to create the blending effect on the bars*/
        mask: conic-gradient(from 22deg, #0003,#000);      /* must include second mask vaule to have clean CSS code*/
    animation: load 1s steps(8) infinite;                       /* creates the spinning effect on bars. used 8 to match number of bars. Can be increased to look different*/
  }
  
  .loader1,
  .loader1:before {                             /* learned how to using Var can help keep code easy to change*/
    --_g: linear-gradient(dodgerblue 0 0) 50%; 
    background: 
      var(--_g)/34% 8%  space no-repeat,        /* 34% wide and 8% tall. Used 34% to keep no more than 2 bars*/
      var(--_g)/8%  34% no-repeat space;        /* space keyword duplicated the */
  }
  
  .loader1:before {                             /* targeted pseudo-class ::before from loader1 to create 4 more bars*/
    content: "";
    transform: rotate(45deg); 
  }

  @keyframes load {                              /* creates the continous movement effect, still need more infomation on more @keyframes, looked at templates to get this working*/
    from {transform: rotate(0turn)}
    to   {transform: rotate(1turn)}
  }




/*
==========================================================
    Second loader.  multiple loaders lined up
==========================================================
*/

.loader-holder2 {
  margin: 0;
  min-height: 50vh;
  display: grid;
  place-content: center;
  place-items: center;
  grid-auto-flow: row;
  gap: 50px;
  padding: 2rem;
  background-color: #000;
}

.loader2 {
  width: 150px;           
  aspect-ratio: 1;        
  display: grid;
  -webkit-mask: conic-gradient(from 22deg, #0003, #000);
          mask: conic-gradient(from 22deg, #0003, #000);
  animation: load 1s steps(12) infinite;             /* changed to 12 steps to align with the increase of bars given by ::after psuedo-element */         
}

.loader2,
.loader2::before,
.loader2::after {                                 /* used ::after to create another set of bars given me 12 total lines */
  --_g: linear-gradient(currentColor 0 0) 50%; 
  background: 
    var(--_g)/34% 5%  space no-repeat,            /* decreased line thickness from 8% to 5% */
    var(--_g)/5%  34% no-repeat space;        
}

.loader2::before,
.loader2::after {                            
  content: "";
  grid-area: 1/1;                                 /* allows placement of the 3 loader2 divs to be in same area as each other and makes them stackable */
  transform: rotate(30deg); 
}

.loader2::after {
  transform: rotate(60deg);
}

@keyframes load {                              
  from {transform: rotate(0turn)}
  to   {transform: rotate(1turn)}
}


/*
============================================================
Third loader. creating circular shape
============================================================
*/

.loader3 {
  width: 100px;
  aspect-ratio: 1;
  display: grid;
  -webkit-mask: conic-gradient(from 15deg, #0003, #000);
  mask: conic-gradient(from 15deg, #0003, #000);
  animation: load 1s steps(12) infinite;
}

.loader3,
.loader3::before,
.loader3::after {
  background: radial-gradient(closest-side at 50% 12.5%, currentcolor 90%, #0000 98%)
              50% 0/20% 80%;
  background: radial-gradient(closest-side at 12.5% 50%, currentcolor 90%, #0000 98%)
              0 50%/80% 20%;
}

.loader3::before,
.loader3::after {
  content: "";
  grid-area: 1/1;
  transform: rotate(30deg);
}

.loader3::after {
  transform: rotate(60deg);
}

@keyframes load {
  from {transform: rotate(0turn)}
  to   {transform: rotate(1turn)}
}

.loader-holder3 {
  margin: 0;
  min-height: 40vh;
  display: grid;
  place-content: center;
  place-items: center;
  grid-auto-flow: column;
  gap: 30px;
}